
#include"lib/STD_TYPES.H"
#include"lib/BIT_MATH.H"
#include "DIO_interface.h"
#include "GIE_interface.h"
#include "TIMR_interface.h"

u32 seven_segment[10]=   /* array for the table of displaying numbers on 7-segment */
	{
			0b00111111,
			0b00000110,
			0b01011011,
			0b01001111,
			0b01100110,
			0b01101101,
			0b01111101,
			0b00000111,
			0b01111111,
			0b01101111
	};

void ISR_Blink()
{
	static u16 local_u16Counter = 0;
	static u8 state = 0, num =0 ;
	if((local_u16Counter == 200) || (local_u16Counter == 400) || (local_u16Counter == 600) ||
			(local_u16Counter == 800) ||
			(local_u16Counter == 1000) ||
			(local_u16Counter == 1200) ||
			(local_u16Counter == 1400) || (local_u16Counter == 1600) ||(local_u16Counter == 1800)
			)
	{
		state = !state;
		DIO_VidSetPinValue(Port_C,Pin_0, !state);
		DIO_VidSetPinValue(Port_C,Pin_1,state);
		if(num <10)
				{
					DIO_VidSetPortValue(Port_D,seven_segment[num]);
				}

	}
	if(local_u16Counter == 2000)
	{

		DIO_VidSetPinValue(Port_A,Pin_0,state);
		local_u16Counter = 0;
		if(num <10)
		{
			DIO_VidSetPortValue(Port_D,seven_segment[num]);
			num++;
		}
		else
		{
			num =0;
		}
	}
	else
	{
		local_u16Counter ++;
	}
}


int main()
{
	TIMR0_SetCallBack(ISR_Blink);
	DIO_VidSetPinDirection(Port_A,Pin_0,output);
	DIO_VidSetPinDirection(Port_C,Pin_0,output);
	DIO_VidSetPinDirection(Port_C,Pin_1,output);
	DIO_VidSetPortDirection(Port_D,output);
	GIE_Vid_Enable();
	TIMR0_VidInit();

	while(1)
	{

	}

	return 0;
}
