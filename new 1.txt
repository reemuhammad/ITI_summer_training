u16 Period=20, Ontime=0;
void Capture_Signal()
{

	static u16 local_u16first_capture =0, local_u16second_capture =0, local_u16third_capture =0;
	static u8 local_u8interrupt_counter =1;

	if(local_u8interrupt_counter == 1 )
	{
		DIO_VidSetPinValue(Port_B,Pin_3,high);
		local_u16first_capture = ICR1;
		/* falling edge */
		CLEAR_BIT(TCCR1B,TCCR1B_ICES1_PIN);
		local_u8interrupt_counter++ ;
	}
	else if(local_u8interrupt_counter == 2 )
	{
		DIO_VidSetPinValue(Port_B,Pin_4,high);
		local_u16second_capture = ICR1;
		TCCR1B |=  (Enable_rising_edge_trigger << TCCR1B_ICES1_PIN) ;
		local_u8interrupt_counter++ ;
	}
	else if(local_u8interrupt_counter == 3)
	{
		DIO_VidSetPinValue(Port_B,Pin_7,high);
		local_u16third_capture = ICR1;
		 /********DISABLLEEEEEEE*****////
		//CLEAR_BIT(TIMSK,TIMSK_TICIE1_PIN) ;
		local_u8interrupt_counter=1 ;
		DIO_VidSetPinValue(Port_B,Pin_3,low);
	}

	Ontime = (local_u16second_capture - local_u16first_capture);
	Period = (local_u16third_capture - local_u16first_capture);
	//Period=30;
}
int main(){

	GIE_Vid_Enable();
	DIO_VidSetPortDirection(CLCD_DATA_PORT,output);
	DIO_VidSetPinDirection(CLCD_CCTRL_PORT,CLCD_RS_PIN,output);
	DIO_VidSetPinDirection(CLCD_CCTRL_PORT,CLCD_RW_PIN,output);
	DIO_VidSetPinDirection(CLCD_CCTRL_PORT,CLCD_E_PIN,output);
	u8 stringArrayPeriod[20];
	u8 stringArrayOntime[20];
	TIMR1_ICU_SetCallBack(Capture_Signal);
	CLCD_VidInit();
	DIO_VidSetPinDirection(Port_B,Pin_0,output);
	DIO_VidSetPinDirection(Port_B,Pin_3,output);
	DIO_VidSetPinDirection(Port_D,Pin_6,input);	/* Set PIN as input */
	DIO_VidSetPinDirection(Port_B,Pin_4,output);
	DIO_VidSetPinDirection(Port_B,Pin_7,output);
	//Timer_8bit_vid_Init(timer0,PWM_Phase_Correct,Clear_OC0_on_compare_match);
	//Timer_vid_Write_u8_OCR(timer0,128);
	//Timer_8bit_vid_Init(timer2,Fast_PWM,Clear_OC0_on_compare_match);
	//Timer_vid_Write_u8_OCR(timer2,128);
	Timer_vid_Interrupt(timer1,Input_Capture_Int,Enable_rising_edge_trigger);
	Timer1_16bit_vid_Init(Normal,UnitA_Normal_port_operation);
	//Timer_vid_Write_u16reg(ICR,20000);
	//Timer_vid_Write_u16reg(UnitA_OCR,1500);


	while(1)
	{
		CLCD_VidGoToXY(0,0);
		intToStr(Period,stringArrayPeriod,7);
		CLCD_VidWriteString(stringArrayPeriod);
		CLCD_VidGoToXY(1,0);
		intToStr(Ontime,stringArrayOntime,7);
		CLCD_VidWriteString(stringArrayOntime);
		_delay_ms(1000);
		CLCD_VidSendCommand(1);

	}
	return 0;
}
